!BAT
#-#+ ATTRIB.G4B v0.4.1 (20220423), by deomsh
#-#+ Function: get/ set attributes (FAT-devices only)
#-#+ Use: ATTRIB.G4B <FILE> [<+/-attribute(s)>]
#-#+ Remarks: If source device/ path is not given: on root. Short Names in PATH and FILE only! Spaces between set-attributes possible, not needed
#-# Example 1: ATTRIB.G4B (hd0,0)/COMMAND.COM
#-# Example 2: ATTRIB.G4B (fd0)/IO.SYS +r+s+h
#-# Example 3: ATTRIB.G4B msdos.sys -r -s -h
#-# Example 4: ATTRIB.G4B (hd0,0)/recycled
#-# Example 5: ATTRIB.G4B (hd0,0)/recycled/desktop.ini -h
::----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
:: MAIN ROUTINE
::----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
if "%~1"=="" && call :help && goto :eof
setlocal && set *
debug 1
debug msg=0
set mdbase=0x3000
if not "%~2"=="" && set mode=setattrib ! set mode=getattrib
set device=%~d1
set path=%~p1
if not "%path%"=="/" && set SFN= && call :checksfn "PATH" "%path%" &; if not %SFN%==N && set SFN= ! endlocal && set result= && goto :eof
set name=%~n1
set ext=%~x1
set SFN= && call :checksfn "FILE" "%name%%%ext%" &; if not %SFN%==N && set SFN= ! endlocal && set result= && goto :eof
set /l ATTRIB=%~2%~3%~4%~5
set /A basemem=%mdbase% * 0x200
call :filesystem "%device%" &; if not /i %filesys:~0,3%==fat && endlocal && set result= && goto :eof
call :bootblockbase "%device%"
call :findpath "%path%" &; if %clusnum%==0 && echo Path %device%%%path% not found && endlocal && set result= && goto :eof
call :findfile "%name%%%ext%" &; if not exist entry && echo Entry %device%%%path%%%name%%%ext% not found && endlocal && set result= && goto :eof
call :attributes "%ATTRIB%"
if %mode%==getattrib && set /u name=%name% && set /u ext=%ext% && set /u path=%path% &; echo FAT dir:[%path%] && echo %name%%%ext% %a%%%d% %s%%%h%%%r%
if %mode%==setattrib && if not exist result && echo Attributes %ATTRIB% not set && endlocal && set result= && goto :eof
endlocal && set result=%result%
goto :eof
::----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
:: SUBROUTINES
::----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
:attributes
#-# get/ set attributes (no set of V and D, A on files only)
setlocal
set /A address=%basemem%+0xB &; read %address% ;; set /A attrib=%@retval%&0xff
set /a bit0=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit1=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit2=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit3=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit4=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit5=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit6=%attrib%&1
if %bit0%==1 && set r=R ;; if %bit1%==1 && set h=H ;; if %bit2%==1 && set s=S ;; if %bit3%==1 && set v=V ;; if %bit4%==1 && set d=D ;; if %bit5%==1 && set a=A
#BUG#if %bit0%==1 && set r=R ;; if %bit1%==1 && set s=S ;; if %bit2%==1 && set h=H ;; if %bit3%==1 && set v=V ;; if %bit4%==1 && set d=D ;; if %bit5%==1 && set a=A
if not %mode%==setattrib && endlocal && set r=%r% && set s=%s% && set h=%h% && set v=%v% && set d=%d% && set a=%a% && goto :eof
if not /i %filesys%==fat32 && if not %entry%>=%root% && endlocal && set result= && goto :eof
if /i %filesys%==fat32 && if not %entry%>=%dataarea% && endlocal && set result= && goto :eof
if not %d%==D && call Fn.11 "%~1" "+r" && set bit0=1
if not %d%==D && call Fn.11 "%~1" "-r" && set bit0=0
call Fn.11 "%~1" "+h" && set bit1=1
call Fn.11 "%~1" "-h" && set bit1=0
call Fn.11 "%~1" "+s" && set bit2=1
call Fn.11 "%~1" "-s" && set bit2=0
if not %d%==D && call Fn.11 "%~1" "+a" && set bit5=1
if not %d%==D && call Fn.11 "%~1" "-a" && set bit5=0
set /a bit0=1*%bit0% ;; set /a bit1=2*%bit1% ;; set /a bit2=4*%bit2% ;; set /a bit3=8*%bit3% ;; set /a bit4=16*%bit4% ;; set /a bit5=32*%bit5% ;; set /a bit6=64*%bit6%
set /A addattr2=%bit0%+%bit1%+%bit2%+%bit3%+%bit4%+%bit5%+%bit6%
set /A attentry=%entry%+0xB &; raw write --offset=%attentry% %device%%0+%totsect% \x%addattr2:~2% > nul && set result=1
#echo Written attributes to address attentry=%attentry% Value: addattr2=%addattr2% result=%result% file=%name%%%ext% && pause
endlocal && set result=%result% && set addattr2=%addattr2%
goto :eof

:findpath
#-# returns cluster-number, cluster-size and disk-address of directory (root values special case)
setlocal
set "path=%~1"
if /i %filesys%==fat32 && set bytedone=%dataarea% && set /A dirlen=%clussize%
if not /i %filesys%==fat32 && set bytedone=%root% && set /A dirlen=%dataarea%-%root%
if "%path%"=="/" && endlocal && set bytedone=%bytedone% && set dirlen=%dirlen% && set sfnpath=/ && goto :eof
echo "%path%" > (md)%mdbase%+1
call Fn.11 "%path%" " " && call :lsspaces
cat --locate=/ --replace=\x20 (md)%mdbase%+1 > nul
cat --locate=\x22 --replace=\x20 (md)%mdbase%+1 > nul
set clusnum=0 && set sfnpath=/ && cat (md)%mdbase%+1 | call :finddirectory
endlocal && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set entry=%entry% && set sfnfile=%sfnfile% && set sfnpath=%sfnpath% && set lfnentry=%lfnentry%
goto :eof

:lsspaces
#-# replace forward-slash and double-qoutes for spaces
setlocal
set numspace= && set /A skip=0
cat --locate=\x20 (md)%mdbase%+1 > nul ;; set /a numspace=%@retval%
if %numspace%==0 && endlocal && goto :eof
:looplsspaces
#if %numspace%==0 && endlocal && set lsspaces=Y && goto :eof
cat --skip=%skip% --locate=\x20 --number=1 (md)%mdbase%+1 > nul &; set /a skip=%?%
set /A seek=%skip%+1
raw dd if=(md)%mdbase%+1 of=(md)%mdbase%+1 bs=1 skip=%skip% seek=%seek% > nul
cat --skip=%skip% --locate=\x20 --replace=\x5C --number=1 (md)%mdbase%+1 > nul
set /a numspace=%numspace% - 1
if %numspace%==0 && endlocal && set lsspaces=Y && goto :eof
set /A skip=%skip% + 2
goto :looplsspaces

:finddirectory
#-# find disk-address and cluster number of last directory in PATH
if "%1"=="" && goto :eof
set "argname=%~n1" && set "argext=%~x1"
set sfnpath=%sfnpath%%%argname%%%argext%/ && set ENTRY= && call :catfile "%~1"
set /A address=%basemem%+0x1A
:finddirectoryloop
set entry= && set success= && set argname= && set argext=
if not exist entry && cat --skip=%bytedone% --locate="%ENTRY%" --length=%dirlen% --number=1 %device%%0+%totsect% | set entry= &; if exist entry && set entry=0x%entry%
if exist entry && if not %success%==Y && echo -n > (md)%mdbase%+%clussect% && raw dd if=%device%%0+%totsect% of=(md)%mdbase%+1 bs=1 count=0x20 skip=%entry% > nul && set success=Y
if %success%==Y && if /i %filesys%==fat32 && read %address% &; set /A clusnumL=%@retval%&0xffff &; set clusnumL=0000%clusnumL:~2% && set /A address=%address%-0x6 &; read %address% &; set /A clusnumH=%@retval%&0xffff &; if %clusnumH%==0x0 && set /A clusnum=0x%clusnumL:~-4,4% ! set clusnum=%clusnumH%%%clusnumL:~-4,4%
if %success%==Y && if not /i %filesys%==fat32 && read %address% &; set /A clusnum=%@retval%&0xffff
if not exist entry && if exist clusnum && if %bytedone%>=%dataarea% && call :lookupFAT "%clusnum%" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% && goto :finddirectoryloop
if exist entry && if %success%==Y && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize%
if not %clusnum%==0 && shift ! goto :eof
goto :finddirectory

:findfile
#-# find disk-address of entry in directory
if "%path%"=="/" && set clusnum=2
setlocal
call :catfile "%name%%%ext%"
:findfileloop
set entry= && set success=
cat --skip=%bytedone% --locate="%ENTRY%" --length=%dirlen% --number=1 %device%%0+%totsect% | set entry= &; if exist entry && set entry=0x%entry%
if exist entry && echo -n > (md)%mdbase%+1 && raw dd if=%device%%0+%totsect% of=(md)%mdbase%+1 bs=1 count=0x20 skip=%entry% > nul && set success=Y
#notneeded#if %success%==Y && if /i %filesys%==fat32 && read %address% &; set /A clusnumL=%@retval%&0xffff &; set clusnumL=0000%clusnumL:~2% && set /A address=%address%-0x6 &; read %address% &; set /A clusnumH=%@retval%&0xffff &; if %clusnumH%==0x0 && set /A clusnum=0x%clusnumL:~-4,4% ! set clusnum=%clusnumH%%%clusnumL:~-4,4%
#notneeded#if %success%==Y && if not /i %filesys%==fat32 && read %address% &; set /A clusnum=%@retval%&0xffff
if not exist entry && if %bytedone%>=%dataarea% && if exist clusnum &; call :lookupFAT "%clusnum%" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% && goto :findfileloop
endlocal && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set entry=%entry% && set ENTRY=%ENTRY% && set sfnpath=%sfnpath% && set lastclus=%lastclus% && set success=%success%
goto :eof

:catfile
#-# change filename to uppercase and complete to 8+3 ENTRY with spaces (if needed)
setlocal && set *
set /u NAME=%~n1 &; set /a namelen=%@retval% &; if %namelen%<=7 && call :spread "NAME" "%namelen%" &; set NAME=%NAME%%%spread% && set spread=
set /u EXT=%~x1 ;; set EXT=%EXT:~1% ;; set /a extlen=%@retval% &; if exist EXT && if %extlen%<=2 && call :spread "EXT" "%extlen%" &; set EXT=%EXT%%%spread% && set spread=
if %namelen%>=1 && if %namelen%<=8 &; if not exist EXT && set ENTRY=%NAME%\x20\x20\x20 ! if %extlen%<=3 && set ENTRY=%NAME%%%EXT%
endlocal && set ENTRY=%ENTRY%
goto :eof

:spread
#-# add spaces (\x20)
setlocal && set *
set "message=%~1"
set /a len=%~2 ;; if not exist len && set len=0
if %message%==NAME && set /a spaces=8-%len% && set "char=\x20"
if %message%==EXT && set /a spaces=3-%len% && set "char=\x20"
set c=1
:spreadloop
if %c%<=%spaces% && set "spread=%spread%%%char%" && set /a c=%c%+1 && goto :spreadloop
endlocal && set "spread=%spread%"
goto :eof

:lookupFAT
#-# lookup for next/ last cluster in directory-chain
setlocal
set clusnum=%~1 &; set lastclus=%clusnum%
if /i %filesys%==fat12 && set FATbytes=1.5 ! if /i %filesys%==fat16 && set FATbytes=2 ! if /i %filesys%==fat32 && set FATbytes=4
if /i %filesys%==fat32 && set /A address=%clusnum% * %FATbytes% + %fat1% &; call :readdisk "%address%" &; set /A nextclus=%result%&0xffffffff &; set result= && if %nextclus%<=0xFFFFFF6 && set clusnum=%nextclus% ! set clusnum=0
if /i %filesys%==fat16 && set /A address=%clusnum% * %FATbytes% + %fat1% &; call :readdisk "%address%" &; set /A nextclus=%result%&0xffff &; set result= && if %nextclus%<=0xFFEF && set clusnum=%nextclus% ! set clusnum=0
if /i %filesys%==fat12 &; calc %lastclus% % 2 |; set /A address=%clusnum% / 2 + %clusnum% + %fat1% && set even=Y &; call :readdisk "%address%" &; set /A nextclus=%result%&0x0fff &; set result= && if %nextclus%>=0xFF0 && set clusnum=0 ! set clusnum=%nextclus%
if /i %filesys%==fat12 &; calc %lastclus% % 2 &; set /A address=%clusnum% / 2 + %clusnum% + %fat1% && set even=N &; call :readdisk "%address%" &; set /A nextclus=%result%&0xffff>>4 &; set result= && if %nextclus%>=0xFF0 && set clusnum=0 ! set clusnum=%nextclus%
if %clusnum%==1 && set clusnum=0
endlocal && set clusnum=%clusnum% && set lastclus=%lastclus%
goto :eof

:readdisk
#-# read Little-Endian 32-bit values, output in hex (Big-Endian)
setlocal && set * && set device=%device% && set totsect=%totsect%
cat --hex --skip=%~1 --length=4 %device%%0+%totsect% | set litleend=
set LE=%litleend:~10,11% &; set result=0x%LE:~9,2%%%LE:~6,2%%%LE:~3,2%%%LE:~0,2%
endlocal && set result=%result%
goto :eof

:filesystem
#-# check if filesystem is FAT12/16/32
setlocal && set * && set mdbase=%mdbase%
set device=%~1
echo -n > (md)%mdbase%+1
errorcheck off
debug msg=1
if exist device && vol %device% > (md)%mdbase%+1
debug msg=0
if exist device && set filesys=fat12 &; cat --locatei=%filesys% (md)%mdbase%+1 > nul || set filesys=fat16 &; cat --locatei=%filesys% (md)%mdbase%+1 > nul || set filesys=fat32 &; cat --locatei=%filesys% (md)%mdbase%+1 > nul || set filesys=initrdfs &; cat --locatei=%filesys% (md)%mdbase%+1 > nul || set filesys=
endlocal && set filesys=%filesys%
goto :eof

:bootblockbase
#-# read-out bootsector as far as needed
setlocal && set * && set mdbase=%mdbase% && set filesys=%filesys%
set device=%~1
echo -n > (md)%mdbase%+1
dd if=%device%%0+1 of=(md)%mdbase%+1 > nul
set /A base=%mdbase% * 0x200
set /A address=%base%+0xB
read %address% > nul &; set /A bytepsec=%@retval%&0xffff
#echo bytepsec=%bytepsec%
set /A address=%base%+0xD
read %address% > nul ;; set /A secpclus=%@retval%&0xff
#echo secpclus=%secpclus%
set /A address=%base%+0xE
read %address% > nul ;; set /A reserved=%@retval%&0xffff
set /A address=%base%+0x10
read %address% > nul ;; set /A numfats=%@retval%&0xff
set /A address=%base%+0x11
read %address% > nul ;; set /A rootentr=%@retval%&0xffff
set /A address=%base%+0x13
read %address% > nul ;; set /A totsect=%@retval%&0xffff
#echo totsect=%totsect%
#notneeded#set /A address=%base%+0x15
#notneeded#read %address% > nul ;; set /A mediabyt=%@retval%&0xff
#echo mediabyt=%mediabyt%
set /A address=%base%+0x16
read %address% > nul ;; set /A secpfat=%@retval%&0xffff
#echo secpfat=%secpfat%
#notneeded#set /A address=%base%+0x18
#notneeded#read %address% > nul ;; set /A secptrac=%@retval%&0xffff
#notneeded#set /A address=%base%+0x1A
#notneeded#read %address% > nul ;; set /A numheads=%@retval%&0xffff
#notneeded#set /A address=%base%+0x1C
#notneeded#read %address% > nul ;; set /A hiddsect=%@retval%&0xffffffff
if %totsect%==0 && set /A address=%base%+0x20
if %totsect%==0 && read %address% > nul &; set /A totsect=%@retval%&0xffffffff
#echo totsect=%totsect%
if %secpfat%==0 && if /i %filesys%==fat32 && set /A address=%base%+0x24
if %secpfat%==0 && if /i %filesys%==fat32 && read %address% > nul &; set /A secpfat=%@retval%&0xffff
set /A rootbyte=%rootentr% * 32
set /A fatbyte=%numfats% * %secpfat% * %bytepsec%
set /A rsrvbyte=%reserved% * %bytepsec%
if not /i %filesys%==fat32 && set /A root=%fatbyte% + %rsrvbyte%
set /A dataarea=%rootbyte% + %fatbyte% + %rsrvbyte%
set /A clussize=%secpclus% * %bytepsec%
set /A fat1=%rsrvbyte%
#notneeded#set /A fat2=%fatbyte% / 2 + %rsrvbyte%
#notneeded#set /A numclus=-%dataarea% / 0x200 + %totsect% / %secpclus%
endlocal && set dataarea=%dataarea% && set clussize=%clussize% && set root=%root% && set fat1=%fat1% && set totsect=%totsect% && set secpclus=%secpclus%
goto :eof

:checksfn
setlocal && set * && set mdbase=%mdbase%
set "path=%path:~1%" && set /a skip0A=0 > nul && set name= && set ext= && set sfn=
echo -n > (md)%mdbase%+1
if %~1==FILE && set "file=%~2" && set test=file && shift &; call :pathchecksfn "%file%" &; endlocal && set SFN=%SFN% && goto :eof
if %~1==PATH && set "path=%~2" && set test=path && shift
:loopchecksfn
pause --wait=0 %path% > (md)%mdbase%+1 && cat --locate=\x2F --replace=\x0A (md)%mdbase%+1 > nul
set file= &; cat --skip=%skip0A% (md)%mdbase%+1 | set file=
cat --locate=\x20 (md)%mdbase%+1 > nul && set SFN=N && set file= && echo -n $[0x0F]Spaces in %test%name not allowed
if exist file && call :pathchecksfn %file% "PATH"
pause --wait=0 %path% > (md)%mdbase%+1 && cat --locate=\x2F --replace=\x0A (md)%mdbase%+1 > nul
if not %SFN%==N && set /a skip0A=%skip0A%+1 > nul &; cat --skip=%skip0A% --locate=\x0A --number=1 (md)%mdbase%+1 > nul &; set /a length0A=%?% > nul &; set /a skip0A=%length0A% > nul &; goto :loopchecksfn
endlocal && set SFN=%SFN% && goto :eof
:pathchecksfn
setlocal
echo -n > (md)%mdbase%+1
pause --wait=0 "%file%" > (md)%mdbase%+1
cat --locate=\x20 (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]Spaces in %test%name not allowed &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=/ (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]/ in %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
echo -n > (md)%mdbase%+1
set "name=%~n1"
set "ext=%~x1"
set "file=%~nx1"
if not exist name && set SFN=N && echo -n $[0x0F]Name-part of file-name is missing &; endlocal && set SFN=%SFN% && goto :eof
set "file=%file%"
set /a sfn=%@retval% > nul
if %sfn%>=13 && set SFN=N && echo -n $[0x0F]%test%name >=13 chars &; endlocal && set SFN=%SFN% && goto :eof
set sfn=
set "name=%name%"
set /a sfn=%@retval% > nul
if %sfn%==0 && set SFN=N && echo -n $[0x0F]Name-part is missing &; endlocal && set SFN=%SFN% && goto :eof
if %sfn%>=9 && set SFN=N && echo -n $[0x0F]Name-part >=9 chars &; endlocal && set SFN=%SFN% && goto :eof
set sfn=
set "ext=%ext%"
set /a sfn=%@retval% > nul
if %sfn%==1 && if %ext:~0,1%==. && set SFN=N && echo -n $[0x0F]Extension-part is missing after '.' &; endlocal && set SFN=%SFN% && goto :eof
if %sfn%>=2 && if not %ext:~0,1%==. && set SFN=N && echo -n $[0x0F]Extension is invalid &; endlocal && set SFN=%SFN% && goto :eof
if %sfn%>=5 && set SFN=N && echo -n $[0x0F]Extension >=4 chars &; endlocal && set SFN=%SFN% && goto :eof
echo -n > (md)%mdbase%+1
raw write (md)%mdbase%+1 %name%\x00 > nul
cat --locate=. (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]'.' in 8 char of name-part is forbidden &; endlocal && set SFN=%SFN% && goto :eof
echo -n > (md)%mdbase%+1
raw write (md)%mdbase%+1 %file%\x00 > nul
## 8+3 nogo: double-qoute * + , \ / : ; < > ? '!' [ ] | = and 'spaces' (but '-' allowed!)
cat --locate=\x22 (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]Double-quote in 8+3 %test%name is forbidden && set dq=Y &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=* (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]* in 8+3 %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=+ (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]+ in 8+3 %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=, (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F], in 8+3 %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=\ (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]\ in 8+3 %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=/ (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]/ in 8+3 %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=: (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]':' in 8+3 %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=; (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]; in 8+3 %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=< (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]< in 8+3 %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=> (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]> in 8+3 %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=? (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]? in 8+3 %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
#ORG#cat --locate=! (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]'!' in 8+3 %test%name not alowed here &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=[ (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F][ in 8+3 %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=] (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]] in 8+3 %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
cat --locate=| (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]| in 8+3 %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
cat --locate== (md)%mdbase%+1 > nul && set SFN=N && echo -n $[0x0F]Equality-sign in 8+3 %test%name is forbidden &; endlocal && set SFN=%SFN% && goto :eof
cat (md)%mdbase%+1 | set file=
set sfn=
set "file=%file%"
set /a sfn=%@retval% > nul
if %sfn%==1 && if %file%==. && set SFN=N && echo -n $[0x0F]Name and extension missing &; endlocal && set SFN=%SFN% && goto :eof
if %~2==PATH && goto :eof
if exist file && if "%file:~-1,1%"=="." && set "file=%file:~0,-1%"
echo -n > (md)%mdbase%+1
endlocal && set SFN=%SFN% && goto :eof

:help
echo ATTRIB.G4B v0.4.1 (20220423), by deomsh
echo Function: get/ set attributes (FAT-devices only)
echo Use: ATTRIB.G4B <FILE> [<+/-attribute(s)>]
echo Remarks: If source device/ path is not given: on root. Short Names in PATH and FILE only! Spaces between set-attributes possible, not needed
echo Example 1: ATTRIB.G4B (hd0,0)/COMMAND.COM
echo Example 2: ATTRIB.G4B (fd0)/IO.SYS +r+s+h
echo Example 3: ATTRIB.G4B msdos.sys -r -s -h
echo Example 4: ATTRIB.G4B (hd0,0)/recycled
echo Example 5: ATTRIB.G4B (hd0,0)/recycled/desktop.ini -h
goto :eof
